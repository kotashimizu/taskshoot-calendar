# TaskShoot Calendar - Development Docker Compose
# セキュリティ重視の開発環境構成

version: '3.8'

services:
  # Next.js アプリケーション
  app:
    build:
      context: .
      dockerfile: Dockerfile.dev
    container_name: taskshoot-app
    ports:
      - '3000:3000'
    volumes:
      - .:/app
      - /app/node_modules
      - /app/.next
    environment:
      - NODE_ENV=development
      - NEXT_TELEMETRY_DISABLED=1
      - WATCHPACK_POLLING=true
    env_file:
      - .env.local
    depends_on:
      - redis
    networks:
      - taskshoot-network
    restart: unless-stopped

  # Redis (セッション・キャッシュ用)
  redis:
    image: redis:7-alpine
    container_name: taskshoot-redis
    ports:
      - '6379:6379'
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-taskshoot_redis_dev}
    networks:
      - taskshoot-network
    restart: unless-stopped

  # PostgreSQL (ローカル開発用 - Supabase代替)
  postgres:
    image: postgres:15-alpine
    container_name: taskshoot-postgres
    ports:
      - '5432:5432'
    environment:
      POSTGRES_DB: taskshoot_dev
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-taskshoot_postgres_dev}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskshoot-network
    restart: unless-stopped

  # Nginx (リバースプロキシ・SSL終端)
  nginx:
    image: nginx:alpine
    container_name: taskshoot-nginx
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - taskshoot-network
    restart: unless-stopped

# ネットワーク定義
networks:
  taskshoot-network:
    driver: bridge

# ボリューム定義
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
